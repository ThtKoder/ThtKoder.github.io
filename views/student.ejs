<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/views/ref.css">
    <script>src="student.js"</script>
    
</head>
<body>
    <img style="width: 100%; height: 100%" src="assets/Cal25-26.jpg" />

    <div data-has-description="false" data-has-error="false" data-has-label="true" data-state="Default" data-value-type="Default" style="width: 100%; height: 100%; flex-direction: column; justify-content: flex-start; align-items: flex-start; gap: 8px; display: inline-flex"></div>
    <!-- border/margin -->

    <div style="align-self: stretch; color: var(--Text-Default-Default, #1E1E1E); font-size: 16px; font-family: Inter; font-weight: 400; line-height: 22.40px; word-wrap: break-word">Criterion A: Describing a Problem</div>
    <div style="width: 6.63px; height: 6.63px; left: 570.35px; top: 67.35px; position: absolute; outline: 1px var(--Icon-Default-Tertiary, #B3B3B3) solid; outline-offset: -0.50px"></div>
    <div style="width: 100%; height: 100%; padding-left: 16px; padding-right: 16px; padding-top: 12px; padding-bottom: 12px; position: relative; background: var(--Background-Default-Default, white); overflow: hidden; border-radius: 8px; outline: 1px var(--Border-Default-Default, #D9D9D9) solid; outline-offset: -0.50px; justify-content: flex-start; align-items: flex-start; display: inline-flex"> "One problem that we have noticed around..." </div>
    <!-- crit a -->

    <div style="flex: 1 1 0; color: var(--Text-Default-Default, #1E1E1E); font-size: 16px; font-family: Inter; font-weight: 400; line-height: 22.40px; word-wrap: break-word">Criterion B: Developing a Solution</div>
    <div style="width: 6.63px; height: 6.63px; left: 570.35px; top: 67.35px; position: absolute; outline: 1px var(--Icon-Default-Tertiary, #B3B3B3) solid; outline-offset: -0.50px"></div>
    <div style="width: 100%; height: 100%; padding-left: 16px; padding-right: 16px; padding-top: 12px; padding-bottom: 12px; position: relative; background: var(--Background-Default-Default, white); overflow: hidden; border-radius: 8px; outline: 1px var(--Border-Default-Default, #D9D9D9) solid; outline-offset: -0.50px; justify-content: flex-start; align-items: flex-start; display: inline-flex"> "We plan to address the above problem by..." </div>
    <!-- crit b -->
    
    <div style="flex: 1 1 0; color: var(--Text-Default-Default, #1E1E1E); font-size: 16px; font-family: Inter; font-weight: 400; line-height: 22.40px; word-wrap: break-word">Criterion C: Creating a Solution</div>
    <div style="width: 6.63px; height: 6.63px; left: 570.35px; top: 67.35px; position: absolute; outline: 1px var(--Icon-Default-Tertiary, #B3B3B3) solid; outline-offset: -0.50px"></div>
    <div style="width: 100%; height: 100%; padding-left: 16px; padding-right: 16px; padding-top: 12px; padding-bottom: 12px; position: relative; background: var(--Background-Default-Default, white); overflow: hidden; border-radius: 8px; outline: 1px var(--Border-Default-Default, #D9D9D9) solid; outline-offset: -0.50px; justify-content: flex-start; align-items: flex-start; display: inline-flex"> "We seek to create a solution that is..." </div>
    <!-- crit c -->

    <div style="flex: 1 1 0; color: var(--Text-Default-Default, #1E1E1E); font-size: 16px; font-family: Inter; font-weight: 400; line-height: 22.40px; word-wrap: break-word">Criterion D: Evaluating</div>
    <div style="width: 6.63px; height: 6.63px; left: 570.35px; top: 67.35px; position: absolute; outline: 1px var(--Icon-Default-Tertiary, #B3B3B3) solid; outline-offset: -0.50px"></div>
    <div style="width: 100%; height: 100%; padding-left: 16px; padding-right: 16px; padding-top: 12px; padding-bottom: 12px; position: relative; background: var(--Background-Default-Default, white); overflow: hidden; border-radius: 8px; outline: 1px var(--Border-Default-Default, #D9D9D9) solid; outline-offset: -0.50px; justify-content: flex-start; align-items: flex-start; display: inline-flex"> "We believe that success is defined as..." </div>
    <!-- crit d -->

    <button onclick="saveText()">Save Text</button>

    <script>
        function saveText(){
            const text = document.getElementById('textbox').value;
            console.log(text);
            // Here you can add code to send the text to your server or save it in a database
            const { MongoClient, ServerApiVersion } = require('mongodb');
            const uri = "mongodb+srv://sanderd2026:<Rrgw01yEg7e7FyZr>@studentdreamfund.hqh4vrh.mongodb.net/?retryWrites=true&w=majority&appName=StudentDreamFund";

            const client = new MongoClient(uri, {
                serverApi: {
                    version: ServerApiVersion.v1,
                    strict: true,
                    deprecationErrors: true,
                }
            });

            async function run() {
                try {
                    // Connect the client to the server (optional starting in v4.7)
                    await client.connect();
                    console.log("Connected to MongoDB");
                    // Send a ping to confirm a successful connection
                    await client.db("admin").command({ ping: 1 });
                    console.log("Pinged your deployment. You successfully connected to MongoDB!");
                } finally {
                    // Ensures that the client will close when you finish/error
                    await client.close();
                }
            }
            run().catch(console.dir);
        }
    </script>
    
    <div i="dropzone" style="width: 100%; height: 200px; border: 2px dashed #ccc; display: flex; justify-content: center; align-items: center;">
        <p id="dropzone-msg">Drag and drop your file here</p>

    <script>
        const dropzone = docuemnt.getElementById('dropzone');
        const dropzoneMsg = document.getElementById('dropzone-msg');

        dropzone.addEventListener('dragover', (event) => {
            event.preventDefault();
        });

        dropzone.addEventListener('drop', () => {
            event.preventDefault();

            if( event.dataTransfer.files.length > 0) {
                const file = event.dataTransfer.files[0];
                dropzoneMsg.textContent = `File "${file.name}" dropped successfully!`;
                

                // Here you can add code to handle the file, like uploading it to a server
            } else {
                dropzoneMsg.textContent = 'No files dropped.';
            }
        });

    </script>

</body>
</html>